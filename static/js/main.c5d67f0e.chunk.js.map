{"version":3,"sources":["components/ServicePanel/ServicePanel.module.css","components/FiltrPanel/FiltrPanel.module.css","components/FiltrPanel/FiltrBtn/FiltrBtn.module.css","components/Header/Header.module.css","components/MainPanel/MainPanel.module.css","components/ServicePanel/ServiceItem/ServiceItem.module.css","components/Icons/Icons.module.css","components/ServicePanel/ServicePage/ServicePage.module.css","components/Header/Header.jsx","components/Icons/Icons.jsx","components/ServicePanel/ServiceItem/ServiceItem.jsx","components/ServicePanel/ServicePanel.jsx","components/FiltrPanel/FiltrBtn/FiltrBtn.jsx","components/FiltrPanel/FiltrPanel.jsx","components/MainPanel/MainPanel.jsx","components/ServicePanel/ServicePage/ServicePage.jsx","App.js","data/state.js","icons/annotator.svg","icons/sigmodel.svg","icons/trafaret.svg","icons/oligo designer.svg","icons/si scorer.svg","render.js","index.js"],"names":["module","exports","Header","className","s","header","to","Icons","props","console","log","id","src","icon","iconSvg","alt","name","ServiceItem","itemRef","React","createRef","path","serviceItem","onClick","setIdService","current","ref","description","createService","services","filter","item","category","map","p","ServicePanel","servicePanel","serviceCaption","caption","servicePanelItem","FiltrBtn","btnRef","addFiltr","isActive","filtrBtnCheck","type","filtrBtn","createBtn","state","filtrs","FiltrPanel","filtrPanel","filtrpanelCaption","filtrpanelBtn","createServicePanel","stateFiltr","length","MainPanel","mainPanel","ServicePage","currentId","getIdService","currentService","find","servicePage","App","exact","render","currentServiceId","idFiltr","filtr","rerenderEntireTree","idService","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c5d67f0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"servicePanel\":\"ServicePanel_servicePanel__fY8Hx\",\"serviceCaption\":\"ServicePanel_serviceCaption__2yogs\",\"servicePanelItem\":\"ServicePanel_servicePanelItem__32PnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filtrPanel\":\"FiltrPanel_filtrPanel__2gy1z\",\"filtrpanelCaption\":\"FiltrPanel_filtrpanelCaption__1QGTh\",\"filtrpanelBtn\":\"FiltrPanel_filtrpanelBtn__2TqOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filtrBtn\":\"FiltrBtn_filtrBtn__2Lpi6\",\"filtrBtnCheck\":\"FiltrBtn_filtrBtnCheck__284U5\",\"filtrIcon\":\"FiltrBtn_filtrIcon__2L0LP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3oTxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPanel\":\"MainPanel_mainPanel__m5MYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serviceItem\":\"ServiceItem_serviceItem__7LsP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconSvg\":\"Icons_iconSvg__2ei3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"servicePage\":\"ServicePage_servicePage__Psu8n\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className={s.header}>\r\n       <NavLink to=\"/ylab\"> Ylab </NavLink>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Icons.module.css';\r\n\r\n\r\n\r\nconst Icons = (props) => {\r\n \r\n  console.log(\"Icons\");\r\n  console.log(props.id);\r\n \r\n\r\n  return (\r\n         <img src={props.icon} className={s.iconSvg} alt={props.name} />\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default Icons;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './ServiceItem.module.css';\r\nimport Icons from '../../Icons/Icons';\r\n\r\n\r\nconst ServiceItem = (props) => {\r\n  let itemRef = React.createRef();\r\n\r\n  let setIdService = () => {\r\n    props.setIdService(itemRef.current.id);\r\n  }\r\n\r\n  let path = \"/servicepage/\" + props.name;\r\n  console.log(\"ServiceItem\");\r\n  console.log(props.icon);\r\n  return (    \r\n    <div className={s.serviceItem} >\r\n      <Icons id={props.id} name={props.name} icon={props.icon}/>\r\n      <NavLink to={path} onClick={ setIdService } ref={itemRef}  id={props.id}>      \r\n      <h2>{props.name}</h2>\r\n      <br />{props.description}  \r\n      </NavLink>\r\n    </div>    \r\n  );\r\n}\r\n\r\nexport default ServiceItem;","import React from 'react';\r\nimport s from './ServicePanel.module.css';\r\nimport ServiceItem from './ServiceItem/ServiceItem';\r\nimport Icons from '../Icons/Icons';\r\n\r\n\r\nconst createService = (props) => { \r\n  let serviceFiltr = props.services.filter( item => item.category==props.name);\r\n  return  serviceFiltr.map( p => <ServiceItem description={p.description} name={p.name} key={p.id} setIdService={props.setIdService} icon={props.icon} id={p.id}/>);   \r\n}\r\n\r\nconst ServicePanel = (props) => {\r\n  return (\r\n    <div className={s.servicePanel}>      \r\n      <div className={s.serviceCaption}>\r\n      <Icons id={props.id} name={props.name} icon={props.icon}/>\r\n      {props.caption}\r\n      </div>\r\n      <div className={s.servicePanelItem}>\r\n        {createService(props) }\r\n      </div>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServicePanel;","import React from 'react';\r\nimport s from './FiltrBtn.module.css';\r\nimport Icons from '../../Icons/Icons';\r\n\r\n\r\nconst FiltrBtn = (props) => {\r\n\r\n  let btnRef = React.createRef();\r\n\r\n  let addFiltr = () => {\r\n    props.addFiltr(btnRef.current.id);   \r\n  }\r\n\r\n  if (props.isActive) {\r\n    return (\r\n      <div className={s.filtrBtnCheck} type=\"button\" onClick={addFiltr} ref={btnRef} id={props.id} name={props.name}>       \r\n           <Icons id={props.id} name={props.name} icon={props.icon}/>\r\n          {props.caption}\r\n      </div>\r\n    );\r\n  }\r\n  else return (\r\n    <div className={s.filtrBtn} type=\"button\" onClick={addFiltr} ref={btnRef} id={props.id} name={props.name}>\r\n         <Icons id={props.id} name={props.name} icon={props.icon}/>\r\n        {props.caption}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default FiltrBtn;","import React from 'react';\r\nimport s from './FiltrPanel.module.css';\r\nimport FiltrBtn from './FiltrBtn/FiltrBtn'\r\n\r\nconst createBtn = (props) => {\r\n   return  props.state.filtrs.map( p => <FiltrBtn key={p.id} caption={p.caption} id={p.id} name={p.name} isActive={p.isActive} icon={p.icon} addFiltr={props.addFiltr}/>);   \r\n}\r\n\r\nconst FiltrPanel = (props) => {\r\n  return (\r\n    <div className={s.filtrPanel}>\r\n      <div className={s.filtrpanelCaption}>\r\n        Инструменты\r\n      </div>\r\n      <div className={s.filtrpanelBtn}>      \r\n      { createBtn(props) }\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default FiltrPanel;","import React from 'react';\r\nimport s from './MainPanel.module.css';\r\nimport ServicePanel from '../ServicePanel/ServicePanel';\r\nimport FiltrPanel from '../FiltrPanel/FiltrPanel';\r\n\r\nconst createServicePanel = (props) => { \r\n  let stateFiltr = props.state.filtrs.filter( item => item.isActive == true);\r\n  if (stateFiltr.length >0 )\r\n  return  stateFiltr.map( p => <ServicePanel services={props.state.services} name={p.name} caption={p.caption}  icon={p.icon} key={p.id} id={p.id} setIdService={props.setIdService}/>);   \r\n  else \r\n  return  props.state.filtrs.map( p => <ServicePanel services={props.state.services} name={p.name} caption={p.caption} icon={p.icon} key={p.id} id={p.id} setIdService={props.setIdService}/>);   \r\n}\r\n\r\nconst MainPanel = (props) => {\r\n  return (\r\n    <div className={s.mainPanel}>      \r\n      <FiltrPanel state={props.state} addFiltr={props.addFiltr}/>          \r\n      {createServicePanel(props)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPanel;","import React from 'react';\r\nimport s from './ServicePage.module.css';\r\nimport Icons from '../../Icons/Icons';\r\n\r\nconst ServicePage = (props) => {\r\n  let currentId = props.getIdService()\r\n  let currentService=props.state.services.find( item => item.id==currentId )\r\n  return (\r\n    <div className={s.servicePage} >      \r\n      <h2>      \r\n      {currentService.name}</h2>\r\n      <br />{currentService.description}      \r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default ServicePage;","import './App.css';\nimport Header from './components/Header/Header';\nimport MainPanel from './components/MainPanel/MainPanel';\nimport {Route} from 'react-router-dom';\nimport ServicePage from './components/ServicePanel/ServicePage/ServicePage'\n\nconst App = (props) => {\n  \n  return (\n    <div>\n      <Header />   \n      <Route exact path=\"/\" render={   () => <MainPanel state={props.state} addFiltr={props.addFiltr} setIdService={props.setIdService}/> }/>\n      <Route exact path=\"/ylab\" render={   () => <MainPanel state={props.state} addFiltr={props.addFiltr} setIdService={props.setIdService}/> }/>\n      <Route path=\"/servicepage\" render={   () => <ServicePage state={props.state} getIdService={props.getIdService}/> }/>      \n    </div> \n  );\n}\n\n\nexport default App;\n","import FiltrPanel from \"../components/FiltrPanel/FiltrPanel\";\r\nimport {rerenderEntireTree} from \"../render\";\r\nimport annotator from '../icons/annotator.svg';\r\nimport sigmodel from '../icons/sigmodel.svg';\r\nimport trafaret from '../icons/trafaret.svg';\r\nimport oligoDesigner from '../icons/oligo designer.svg';\r\nimport siScorer from '../icons/si scorer.svg';\r\n\r\nlet state = {\r\n    filtrs: [\r\n        {\r\n          id: 0,\r\n          name:'prediction',\r\n          caption: 'Прогноз',\r\n          isActive: false,\r\n          icon:annotator\r\n        },\r\n        {\r\n          id: 1,\r\n          name:'selection',\r\n          caption: 'Подбор',\r\n          isActive: false,\r\n          icon:sigmodel\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'synthesis',\r\n          caption: 'Синтез',\r\n          isActive: false,\r\n          icon:trafaret\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'check',\r\n          caption: 'Проверка',\r\n          isActive: false,\r\n          icon:oligoDesigner\r\n        },\r\n        {\r\n          id: 4,\r\n          name:'documents',\r\n          caption: 'Документы',\r\n          isActive: false,\r\n          icon:siScorer\r\n        }\r\n      ],\r\n      services: [\r\n        {\r\n          \"name\": \"PTM Report\",\r\n          \"description\": \"Предсказывает возможные посттрансляционные модификации в аминокислотных последовательностях вариабельных доменов антител\",\r\n          \"id\": \"1\",\r\n          \"category\": \"prediction\"\r\n        },\r\n        {\r\n          \"name\": \"Prot-Params\",\r\n          \"description\": \"Вычисляет свойства пептидов\",\r\n          \"id\": \"2\",\r\n          \"category\": \"prediction\"\r\n        },\r\n        {\r\n          \"name\": \"Nu-Params\",\r\n          \"description\": \"Предсказывает вторичные структуры РНК/ДНК и сайты самозалипания ДНК последовательностей\",\r\n          \"id\": \"3\",\r\n          \"category\": \"prediction\"\r\n        },\r\n        {\r\n          \"name\": \"Trafaret\",\r\n          \"description\": \"Выводит информацию о возможных позициях транскрипционных факторов (ТФ) во входной последовательности\",\r\n          \"id\": \"4\",\r\n          \"category\": \"prediction\"\r\n        },\r\n        {\r\n          \"name\": \"Tap Tool\",\r\n          \"description\": \"Оценивает специфические метрики по структуре антитела и сравнивает их со стандартами\",\r\n          \"id\": \"5\",\r\n          \"category\": \"prediction\"\r\n        },\r\n        {\r\n          \"name\": \"Oligo-Designer\",\r\n          \"description\": \"Генерирует олиги по аминокислотным или нуклеотидным последовательностям\",\r\n          \"id\": \"6\",\r\n          \"category\": \"selection\"\r\n        },\r\n        {\r\n          \"name\": \"Mutagenesis Primers\",\r\n          \"description\": \"Подбирает мутирующие праймеры для сборки кандидатов\",\r\n          \"id\": \"7\",\r\n          \"category\": \"selection\"\r\n        },\r\n        {\r\n          \"name\": \"Oligos Library\",\r\n          \"description\": \"Библиотечный режим олиго-дизайнера, выдаёт результат с минимальным количеством уникальных олигов\",\r\n          \"id\": \"8\",\r\n          \"category\": \"selection\"\r\n        },\r\n        {\r\n          \"name\": \"Flanker\",\r\n          \"description\": \"Создаёт праймеры с заданными характеристиками\",\r\n          \"id\": \"9\",\r\n          \"category\": \"selection\"\r\n        },\r\n        {\r\n          \"name\": \"Fasta to CSV\",\r\n          \"description\": \"Конвертирует fasta-файл или txt-файл с изменениями в файл csv\",\r\n          \"id\": \"10\",\r\n          \"category\": \"synthesis\"\r\n        },\r\n        {\r\n          \"name\": \"Biosset\",\r\n          \"description\": \"Создаёт ворклист для синтезатора, ворклист для DropSense, мэппинг и рассчитывает расход реактивов по CSV с заказами\",\r\n          \"id\": \"11\",\r\n          \"category\": \"synthesis\"\r\n        },\r\n        {\r\n          \"name\": \"Oligo-Normaliser\",\r\n          \"description\": \"Создаёт ворклист для текана по файлам с заказами или мэппингу из Biosset\",\r\n          \"id\": \"12\",\r\n          \"category\": \"synthesis\"\r\n        },\r\n        {\r\n          \"name\": \"Tecan Lib\",\r\n          \"description\": \"Генерирует ворклисты для текана по сборке конструкций из олигов и добавлению к ним фланкеров\",\r\n          \"id\": \"13\",\r\n          \"category\": \"synthesis\"\r\n        },\r\n        {\r\n          \"name\": \"Seq-Validator\",\r\n          \"description\": \"Верифицирует сборку плазмиды по данным секвенирования\",\r\n          \"id\": \"14\",\r\n          \"category\": \"check\"\r\n        },\r\n        {\r\n          \"name\": \"Sanger Helper\",\r\n          \"description\": \"Собирает клонов по файлам секвенирования\",\r\n          \"id\": \"15\",\r\n          \"category\": \"check\"\r\n        },\r\n        {\r\n          \"name\": \"In-house Annotator\",\r\n          \"description\": \"Аннотирует последовательности по выбранной базе данных и разметке\",\r\n          \"id\": \"16\",\r\n          \"category\": \"check\"\r\n        },\r\n        {\r\n          \"name\": \"WHO-like Annotator\",\r\n          \"description\": \"Аннотирует аминокислотные последовательности антител на животных и человека и подсчитывает vgene-score как у регуляторных органов\",\r\n          \"id\": \"17\",\r\n          \"category\": \"check\"\r\n        },\r\n        {\r\n          \"name\": \"SigModel\",\r\n          \"description\": \"Помогает анализировать результаты тестов и строить визуализации для них\",\r\n          \"id\": \"18\",\r\n          \"category\": \"check\"\r\n        },\r\n        {\r\n          \"name\": \"VH vs VHH\",\r\n          \"description\": \"Определяет типы тяжёлых цепей антител\",\r\n          \"id\": \"19\",\r\n          \"category\": \"check\"\r\n        },\r\n        {\r\n          \"name\": \"Student\",\r\n          \"description\": \"Проводит статистический анализ числовых данных и строит визуализацию для них\",\r\n          \"id\": \"20\",\r\n          \"category\": \"check\"\r\n        },\r\n        {\r\n          \"name\": \"BLAST\",\r\n          \"description\": \"Поиск последовательностей по открытым базам данных\",\r\n          \"id\": \"21\",\r\n          \"category\": \"check\"\r\n        },\r\n        {\r\n          \"name\": \"Plasmid Passport\",\r\n          \"description\": \"Генерирует паспорт плазмид и заполняет стандартные поля\",\r\n          \"id\": \"22\",\r\n          \"category\": \"documents\"\r\n        },\r\n        {\r\n          \"name\": \"Plasmid Mapper\",\r\n          \"description\": \"Генерирует карты плазмид с переданными последовательностями\",\r\n          \"id\": \"23\",\r\n          \"category\": \"documents\"\r\n        },\r\n        {\r\n          \"name\": \"Protein Passport\",\r\n          \"description\": \"Создаёт паспорт белка по файлу с последовательностями или картам плазмид и схеме трансфекции\",\r\n          \"id\": \"24\",\r\n          \"category\": \"documents\"\r\n        },\r\n        {\r\n          \"name\": \"Act Creator\",\r\n          \"description\": \"Составляет для файлов CSV акт приёма-передачи олигов из этих файлов\",\r\n          \"id\": \"25\",\r\n          \"category\": \"documents\"\r\n        },\r\n        {\r\n          \"name\": \"Fasta Formatter\",\r\n          \"description\": \"Записывает последовательности из fasta-файла в соответствии с выбранным форматом\",\r\n          \"id\": \"26\",\r\n          \"category\": \"documents\"\r\n        }\r\n      ],\r\n      currentServiceId:0\r\n}\r\n\r\nexport let addFiltr = (idFiltr) => {\r\n   console.log(\"addFiltr\") \r\n  /* let newFiltr = {\r\n        id: idNew,\r\n        name: \"sdfsdf\",\r\n        caption: \"sdfasfsdf\"\r\n    };\r\n    state.filtrs.push(newFiltr);\r\n    rerenderEntireTree(state);*/\r\n    \r\n    let filtr = state.filtrs.find(item => item.id == idFiltr);\r\n    console.log(filtr);\r\n    console.log( filtr.isActive );\r\n    \r\n    filtr.isActive = !filtr.isActive\r\n    console.log(filtr.isActive );\r\n    \r\n    \r\n    console.log(idFiltr)\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport let setIdService = (idService) => {\r\n  /* let newFiltr = {\r\n       id: idNew,\r\n       name: \"sdfsdf\",\r\n       caption: \"sdfasfsdf\"\r\n   };\r\n   state.filtrs.push(newFiltr);\r\n   rerenderEntireTree(state);*/\r\n   console.log(\"setIdService\")\r\n   console.log(idService)\r\n   state.currentServiceId = idService;\r\n}\r\n\r\nexport let getIdService = (idService) => {\r\n  /* let newFiltr = {\r\n       id: idNew,\r\n       name: \"sdfsdf\",\r\n       caption: \"sdfasfsdf\"\r\n   };\r\n   state.filtrs.push(newFiltr);\r\n   rerenderEntireTree(state);*/\r\n   console.log(\"getIdService\")\r\n   console.log(state.currentServiceId)\r\n   return state.currentServiceId;\r\n}\r\n\r\n\r\nexport default state;","export default __webpack_public_path__ + \"static/media/annotator.ed00d0cc.svg\";","export default __webpack_public_path__ + \"static/media/sigmodel.b9fc1d94.svg\";","export default __webpack_public_path__ + \"static/media/trafaret.d9f3d07f.svg\";","export default __webpack_public_path__ + \"static/media/oligo designer.66e862e0.svg\";","export default __webpack_public_path__ + \"static/media/si scorer.3e98ca43.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport { addFiltr } from './data/state';\r\nimport { setIdService } from './data/state';\r\nimport { getIdService } from './data/state';\r\n\r\n\r\nexport let rerenderEntireTree = (state) => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <App state={state} addFiltr={addFiltr} setIdService={setIdService} getIdService={getIdService}/>\r\n        </BrowserRouter>, document.getElementById('root'));\r\n}","import {rerenderEntireTree} from \"./render\";\nimport state from \"./data/state\";\n\nrerenderEntireTree(state);\n\n\n\n"],"sourceRoot":""}